syntax = "proto3"; // 声明了protobuf的版本

package boozeban; // 声明了代码所在的包（对于C++来说是namespace）

// 定义下面的选项，表示生成service服务类和rpc方法描述，默认不生成
option cc_generic_services = true;

message ResultCode
{
    int32 errcode = 1;
    bytes errmsg = 2;
}

// 数据     列表    映射表
// 定义登录请求消息类型  name   pwd
message LoginRequest
{
    bytes name = 1; // =1 表示这是我们这个LoginRequest的第一个字段
    bytes pwd = 2;  // 字符串类型一般都定义的成bytes 多字节存储，使用时没有改变，接收的时候还是接受的是字符串
    //map<int32, string> test = 3;
}

// 定义登录响应消息类型
message LoginResponse
{
    ResultCode result = 1;
    bool success = 2;
}

// 定义获取好友列表请求消息类型
message GetFriendListsRequest
{
    uint32 userid = 1;
}

message User
{
    bytes name = 1;
    uint32 age = 2;
    enum Sex
    {
        MAN = 0;
        WOMAN = 1;
    }
    Sex sex = 3;

}


message GetFriendListsResponse // 好友列表
{
    ResultCode result = 1;
    repeated User friend_list = 2; // 定义了一个列表类型
}

// 在protobuf里面怎么定义描述rpc方法的类型 - service      message定义消息类型
service UserServiceRpc
{
    rpc Login(LoginRequest) returns(LoginResponse); // 注意protobuf不支持什么rpc功能，它只是对于rpc方法的一个描述，通过这个描述它就可以去做rpc请求所携带的参数的序列化和反序列化
    rpc GetFriendLists(GetFriendListsRequest) returns(GetFriendListsResponse);
}